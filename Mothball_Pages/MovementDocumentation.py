import sys, os
# import tkinter as tk

folder_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '../'))
sys.path.append(folder_path)

# from ballgui import HelpPage
from Mothball_Pages.HelpPage import Page

class MovementDocumentation(Page):
    def __init__(self, master = None, pack = True):
        super().__init__(master, pack)
        self.master = master

        self.heading("Important Notes")
        self.insert_text("Here, you will find all the information for each movement function. A few things to take note.\n\n")
        self.insert_text("A function that can be \"modified by inputs\" means that a function can append inputs like this: ")
        self.inline_code("sprint.wa")
        self.insert_text(". This means to sprint with W and A. If no input is given, then it defaults to just W. Possible inputs are combinations of WASD. In general, any 45 strafe function cannot be modified by inputs.\n\n")
        self.insert_text("The terms \"rotation\" and \"facing\" both refer to the angle at which the player is looking. You will encounter descriptions like \"45 strafing towards the direction of <angle>\". A simple way to think of this is that the player is looking at <angle> while also having the 45 strafe boost. For example, consider the movement \"sprint and 45 strafing towards the direction of 4 degrees\". Both ")
        self.inline_code("sprint.wa(1, 49)")
        self.insert_text(" and ")
        self.inline_code("sprint45(1, 4)")
        self.insert_text(" achieve the same movement.\n\n")
        self.insert_text("For the nerds, to maintain consistency, all 45 strafe movements use the inputs W+A, not W+D. Therefore, ")
        self.inline_code("sprint45(1, angle)")
        self.insert_text(" is equivalent to ")
        self.inline_code("sprint.wa(1, angle + 45)")
        self.insert_text(". However, ")
        self.inline_code("sprint.wd(1, angle - 45)")
        self.insert_text(" is not guaranteed to be exactly the same, but it is very close, with a max difference of 5 decimal places. When making super precise strats, keep this in mind when testing in game.\n\n")
        self.inline_code("slip")
        self.insert_text(" is a block property in Minecraft that determines how slippery a block is, similar to friction in reality. It is a decimal number ranging from 0 to 1. Lower slip values make it easier to accelerate and decelerate, while higher slip values make it harder. Generally, when sprint jumping, blocks with lower slip values provide more speed than those with higher slip values. Most blocks have a slip value of 0.6, and some blocks have different slip values. See the reference table for common slip values.\n\n")
        self.insert_text("Lastly, sprinting in air has version differences. In 1.8 to 1.19, if you start sprinting while midair, it is delayed by 1 tick. In later versions, there is no delay. For example, the equivalent of ")
        self.inline_code("walkjump(4) sprintair(8)")
        self.insert_text(" in 1.8 is ")
        self.inline_code("walkjump(5) sprintair(7)")
        self.insert_text(" in 1.20+.\n\n")

        self.heading("Classic Movement")
        self.insert_text("This section contains functions that simulate normal movement. This is movement that the player can perform in normal circumstances, such as sprinting, sneaking, walking, jumping, and no movement.\n\n")
        self.heading2("Walk")
        self.show_function_signature("walk")
        self.insert_text("\nWalk on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("walk(5) # walk forward for 5t #\nwalk.wd(3, 10) # walk with w+d for 3t while facing at 10 degrees #\nwalk(2, slip=0.98) # walk forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Walk45")
        self.show_function_signature("walk45")
        self.insert_text("\nWhile 45 strafing, walk on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("walk45(5) # walk and 45 strafe for 5t #\nwalk45(2, slip=0.98) # walk and 45 strafe for 2t with a slip of 0.98 (ice) #\nwalk45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprint")
        self.show_function_signature("sprint")
        self.insert_text("\nSprint on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sprint(5) # sprint forward for 5t #\nsprint.wd(3, 10) # sprint with w+d for 3t while facing at 10 degrees #\nsprint(2, slip=0.98) # sprint forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sprint45")
        self.show_function_signature("sprint45")
        self.insert_text("\nWhile 45 strafing, sprint on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("sprint45(5) # sprint and 45 strafe for 5t #\nsprint45(2, slip=0.98) # sprint and 45 strafe for 2t with a slip of 0.98 (ice) #\nsprint45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneak")
        self.show_function_signature("sneak")
        self.insert_text("\nSneak on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sneak(5) # sneak forward for 5t #\nsneak.wd(3, 10) # sneak with w+d for 3t while facing at 10 degrees #\nsneak(2, slip=0.98) # sneak forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sneak45")
        self.show_function_signature("sneak45")
        self.insert_text("\nWhile 45 strafing, sneak on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("sneak45(5) # sneak and 45 strafe for 5t #\nsneak45(2, slip=0.98) # sneak and 45 strafe for 2t with a slip of 0.98 (ice) #\nsneak45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneaksprint (Versions 1.14+ only)")
        self.show_function_signature("sneaksprint")
        self.insert_text("\nSneak and sprint on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sns(5) # sneak sprint forward for 5t #\nsns.wd(3, 10) # sneak sprint with w+d for 3t while facing at 10 degrees #\nsns(2, slip=0.98) # sneak sprint forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sneaksprint45 (Versions 1.14+ only)")
        self.show_function_signature("sns45")
        self.insert_text("\nWhile 45 strafing, sneak and sprint on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("sns45(5) # sneak sprint and 45 strafe for 5t #\nsns45(2, slip=0.98) # sneak sprint and 45 strafe for 2t with a slip of 0.98 (ice) #\nsns45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Stop")
        self.show_function_signature("stop")
        self.insert_text("\nNo movement input for ")
        self.inline_code("duration")
        self.insert_text(" ticks with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(". Note that even if no WASD keys are pressed, the player can still be moving due to existing momentum. This function cannot be modified by inputs.\nExamples:\n\n")
        self.code_snippet("st(2) # stop for 2 ticks #\nw(2) st # walk 2 ticks, then stop for 1 tick #\nst.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

###############################

        self.heading2("Walkair")
        self.show_function_signature("walkair")
        self.insert_text("\nWhile airborne, move for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("walkair(2) # move forward in air for 2t #\nwalkair.sa(7, -3) # move with s+a in air for 3t while facing at -3 degrees #")
        self.insert_text("\n")

        self.heading2("Walkair45")
        self.show_function_signature("walkair45")
        self.insert_text("\nWhile airborne, 45 strafe for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("walkair45(2) # 45 strafe forward in air for 2t #\nwalkair45.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintair")
        self.show_function_signature("sprintair")
        self.insert_text("\nWhile airborne, sprint for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sprintair(2) # sprint forward in air for 2t #\nsprintair.wa(7, -3) # sprint with w+a in air for 3t while facing at -3 degrees #")
        self.insert_text("\n")

        self.heading2("Sprintair45")
        self.show_function_signature("sprintair45")
        self.insert_text("\nWhile airborne, sprint and 45 strafe for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("sprintair45(2) # sprint and 45 strafe forward in air for 2t #\nsprintair45.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneakair")
        self.show_function_signature("sneakair")
        self.insert_text("\nWhile airborne, sneak for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sneakair(2) # sneak forward in air for 2t #\nsneakair.sa(7, -3) # sneak with s+a in air for 3t while facing at -3 degrees #")
        self.insert_text("\n")

        self.heading2("Sneakair45")
        self.show_function_signature("sneakair45")
        self.insert_text("\nWhile airborne, sneak and 45 strafe for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("sneakair45(2) # 45 strafe forward in air for 2t #\nsneakair45.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneaksprintair (Versions 1.14+ only)")
        self.show_function_signature("sneaksprintair")
        self.insert_text("\nWhile airborne, sneak sprint for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snsa(2) # sneak sprint forward in air for 2t #\nsnsa.wa(7, -3) # sneak sprint with w+a in air for 3t while facing at -3 degrees #")
        self.insert_text("\n")

        self.heading2("Sneaksprintair45 (Versions 1.14+ only)")
        self.show_function_signature("snsa45")
        self.insert_text("\nWhile airborne, sneak sprint and 45 strafe for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nExamples:\n\n")
        self.code_snippet("snsa45(2) # sneak sprint and 45 strafe forward in air for 2t #\nsnsa45.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Stopair")
        self.show_function_signature("stopair")
        self.insert_text("\nWhile airborne, no movement input for ")
        self.inline_code("duration")
        self.insert_text(". Note that even if no WASD keys are pressed, the player can still be moving due to existing momentum. This function cannot be modified by inputs.\nExamples:\n\n")
        self.code_snippet("sta(2) # stop in air for 2 ticks #\nwj sta(11) # jump, then stop in air for 11 ticks #\nsta.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

##############

        self.heading2("Walkjump")
        self.show_function_signature("walkjump")
        self.insert_text("\nJump for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("wj(t) = wj(1) wa(t-1)")
        self.insert_text("\nExamples:\n\n")
        self.code_snippet("wj(5) # jump forward for 5t #\nwj.wd(3, 10) # jump with w+d for 3t while facing at 10 degrees #\nwj(2, slip=0.98) # jump forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Walkjump45")
        self.show_function_signature("walkjump45")
        self.insert_text("\nWhile 45 strafing, jump for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("wj45(t) = wj45(1) wa45(t-1)")
        self.insert_text("\nAdditionally, ")
        self.inline_code("wj45")
        self.insert_text(" is equivalent to ")
        self.inline_code("wj.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("wj45(5) # jump and 45 strafe forward for 5t #\nwalk45(2, slow=1) # jump and 45 strafe for 2t with slowness 1 #\nwj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintjump")
        self.show_function_signature("sprintjump")
        self.insert_text("\nSprint jump for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("sj(t) = sj(1) sa(t-1)")
        self.insert_text("\nExamples:\n\n")
        self.code_snippet("sj(5) # sprint jump forward for 5t #\nsj.wd(3, 10) # sprint jump with w+d for 3t while facing at 10 degrees #\nsj(2, slip=0.98) # jump forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sprintjump45")
        self.show_function_signature("sprintjump45")
        self.insert_text("\nSprint jump, then 45 strafe for a total of ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("sj45(t) = sj45(1) sa45(t-1)")
        self.insert_text("\nAdditionally, ")
        self.inline_code("sj45(1)")
        self.insert_text(" is equivalent to ")
        self.inline_code("sj45(1)")
        self.insert_text(" while ")
        self.inline_code("sa45(1)")
        self.insert_text(" is equivalent to ")
        self.inline_code("sa.wa(1,45)")
        self.insert_text(". 45 strafes on sprint jumps require you to face straight on the jump tick, and 45 strafe while midair. This also means that ")
        self.inline_code("sj45(t) = sj(1) sj45(t-1)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("sj45(5) # sprint jump, then 45 strafe forward for a total of 5t #\nsj45(2, slow=1) # jump and 45 strafe for 2t with slowness 1 #\nsj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneakjump")
        self.show_function_signature("sneakjump")
        self.insert_text("\nWhile sneaking, jump for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("snj(t) = snj(1) sna(t-1)")
        self.insert_text("\nExamples:\n\n")
        self.code_snippet("snj(5) # sneak jump forward for 5t #\nsnj.wd(3, 10) # sneak jump with w+d for 3t while facing at 10 degrees #\nsnj(2, slip=0.98) # sneak jump forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sneakjump45")
        self.show_function_signature("sneakjump45")
        self.insert_text("\nWhile 45 strafing, jump for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("snj45(t) = snj45(1) sna45(t-1)")
        self.insert_text("\nAdditionally, ")
        self.inline_code("snj45")
        self.insert_text(" is equivalent to ")
        self.inline_code("snj.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snj45(5) # sneak jump and 45 strafe forward for 5t #\nsnj45(2, slow=1) # sneak jump and 45 strafe for 2t with slowness 1 #\nsnj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneaksprintjump (Versions 1.14+ only)")
        self.show_function_signature("sneaksprintjump")
        self.insert_text("\nSprint jump for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("snsj(t) = snsj(1) snsa(t-1)")
        self.insert_text("\nExamples:\n\n")
        self.code_snippet("snsj(5) # sprint jump forward for 5t #\nsnsj.wd(3, 10) # sprint jump with w+d for 3t while facing at 10 degrees #\nsnsj(2, slip=0.98) # jump forward for 2t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sneaksprintjump45 (Versions 1.14+ only)")
        self.show_function_signature("sneaksprintjump45")
        self.insert_text("\nWhile 45 strafing, sprint sneak jump for ")
        self.inline_code("duration")
        self.insert_text(" ticks towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("snsj45(t) = snsj45(1) snsa45(t-1)")
        self.insert_text(".\n\nIt turns out there is no nice equivalent function for ")
        self.inline_code("snsj45")
        self.insert_text(" as the function automatically optimizes by adjusting the jump angle to maximize distance. This angle differs depending on the circumstance, such as potion effects and how slippery the ground is. Under normal circumstances (no potion effects and a ground slip of 0.6), ")
        self.inline_code("snsj45 = snsj.wa(1, 9.115)")
        self.insert_text(", but if the player has slowness 1 and the ground has a slip of 0.98 (ice), then ")
        self.inline_code("snsj45 = snsj.wa(1, 2.058)")
        self.insert_text(". Also, sprint sneak jumping with strafe turns out to be better than with just W.\nExamples:\n\n")
        self.code_snippet("snsj45(5) # While 45 strafing, sprint sneak jump for a total of 5t #\nsj45(2, slow=1) # sprint sneak jump and 45 strafe for 2t with slowness 1 #\nsj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Stopjump")
        self.show_function_signature("stop")
        self.insert_text("\nJump with no horizontal movement input for ")
        self.inline_code("duration")
        self.insert_text(" ticks with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(". Note that even if no WASD keys are pressed, the player can still be moving due to existing momentum. This function cannot be modified by inputs. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("stj(t) = stj(1) sta(t-1)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("stj(7) # stop jump for 7 ticks #\nst.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintstrafejump")
        self.show_function_signature("stfj")
        self.insert_text("\nSprint strafe jump at the optimal angle for max distance, then face straight for a total of ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("stfj(t) = stfj(1) sa(t-1)")
        self.insert_text("\nAlso note that this angle differs depending on the circumstance, such as potion effects and how slippery the ground is. Under normal circumstances (no potion effects and a ground slip of 0.6), ")
        self.inline_code("stfj = sj.wa(1, 17.478)")
        self.insert_text(", but if the player has speed 1 and the ground has a slip of 0.98 (ice), then ")
        self.inline_code("stfj = sj.wa(1, 6.41)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("stfj(5) # sprint strafe jump at the optimal angle, then face forward for 4 more ticks #\nstfj.wa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintstrafejump45")
        self.show_function_signature("stfj45")
        self.insert_text("\nSprint strafe jump at the optimal angle for max distance, then 45 strafe, all for a total of ")
        self.inline_code("duration")
        self.insert_text(" ticks while traveling in the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input. Note that only the first tick is the jump tick and all subsequent ticks are air ticks. Therefore, if t is the number of ticks, then ")
        self.inline_code("stfj45(t) = stfj45(1) sa45(t-1)")
        self.insert_text("\nAdditionally, ")
        self.inline_code("stfj(1)")
        self.insert_text(" is equivalent to ")
        self.inline_code("stfj45(1)")
        self.insert_text(", so ")
        self.inline_code("stfj45(t) = stfj(1) sa45(t-1)")
        self.insert_text(". The only difference is that subsequent air ticks are 45 strafed.\nExamples:\n\n")
        self.code_snippet("stfj45(5) # sprint strafe jump at the optimal angle, then 45 strafe midair for 4 more ticks #\nstfj45.wa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")
    
###################
        self.heading("Water Movement")
        self.insert_text("This section contains all water related functions. These functions simulate Minecraft 1.8 water movement, or the non-swimming movement in modern versions. There are no jump functions since you can't jump while inside water. You can simulate jumping as normal after leaving water.\n\n")


        self.heading2("Walkwater")
        self.show_function_signature('wwt')
        self.insert_text("\nMove while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input. Note this simulates 1.8 water movement, or the non-swimming movement in later versions.\nExample:\n\n")
        self.code_snippet("wt.s(5) # move back in water for 5 ticks #")
        self.insert_text("\n")

        self.heading2("Walkwater45")
        self.show_function_signature('wwt45')
        self.insert_text("\n45 strafe while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks while traveling in the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input. Note this simulates 1.8 water movement, or the non-swimming movement in later versions.\nExamples:\n\n")
        self.code_snippet("wt45(4) # 45 strafe in water for 4 ticks #\nwt45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintwater")
        self.show_function_signature('swt')
        self.insert_text("\nAlmost identical to ")
        self.inline_code("walkwater")
        self.insert_text(". Move while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input. Note this simulates 1.8 water movement, or the non-swimming movement in later versions. The difference of ")
        self.inline_code("sprintwater")
        self.insert_text(" to ")
        self.inline_code("walkwater")
        self.insert_text(" is that sprint is activated, although it doesn't change water movement. However, it does affect sprint air delay when you exit water.\nExample:\n\n")
        self.code_snippet("swt(10) sa(3) swt(5) # move in water for 10 ticks, then sprint in air for 3 ticks, and then move in water for 5 ticks\nThis is the strategy for waterchest #")
        self.insert_text("\nIn the example, the air ticks are all sprinted. If air sprint delay was present and ")
        self.inline_code("swt")
        self.insert_text(" was replaced by ")
        self.inline_code("wt")
        self.insert_text(", then the first air tick would not be sprinted. Here's a comparison.\n\n")
        self.code_snippet_with_output("print(Comparing Z Distance)\nswt(10) sa(3) swt(5) outz(label=with sprint water)\nvz(0) z(0) st # reset #\nwt(10) sa(3) wt(5) outz(label=with walk water)\nvz(0) z(0) st # reset #\nsprintairdelay(false) wt(10) sa(3) wt(5) outz(label=with walk water and no air sprint delay)")
        self.insert_text("\n")

        self.heading2("Sprintwater45")
        self.show_function_signature('swt45')
        self.insert_text("\n45 strafe while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks while traveling in the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input. Note this simulates 1.8 water movement, or the non-swimming movement in later versions.\n\nThis is equivalent to ")
        self.inline_code("walkwater45")
        self.insert_text(" while in water, but is affected by sprint air delay when exiting water. See ")
        self.inline_code("sprintwater")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("swt45(4) # 45 strafe in water for 4 ticks #\nswt.wd # raises an error: cannot be modified by an input # ")
        self.insert_text("\n")

        self.heading2("Sneakwater")
        self.show_function_signature('snwt')
        self.insert_text("\nSneak while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input. Note this simulates 1.8 water movement, or the non-swimming movement in later versions.\nExample:\n\n")
        self.code_snippet("snwt.wd(2,5.5) # sneak with w+d in water for 2 ticks while facing 5.5 degrees #")
        self.insert_text("\n")

        self.heading2("Sneakwater45")
        self.show_function_signature('snwt45')
        self.insert_text("\nSneak and 45 strafe while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks while traveling in the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input. Note this simulates 1.8 water movement, or the non-swimming movement in later versions.\nExample:\n\n")
        self.code_snippet("snwt45(2,5.5) # sneak and 45 strafe in water for 2 ticks toward the direction of 5.5 degrees #\nsnwt45.wa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Stopwater")
        self.show_function_signature('snwt')
        self.insert_text("\nNo movement input while in water for ")
        self.inline_code("duration")
        self.insert_text(" ticks. Cannot be modified by an input. \nExample:\n\n")
        self.code_snippet("wt.s(7) stwt # move back in water for 7 ticks, then stop for a tick in water #\nstwt.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

##########################
        self.heading("Web Movement")
        self.insert_text("This section deals with web movement.\n\n")

        self.heading2("Web")
        self.show_function_signature("web")
        self.insert_text("\nWalk inside a web and on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("web(5) # walk forward inside a web for 5t #\nweb.wd(3, 10) # walk inside a web with w+d for 3t while facing at 10 degrees #\nweb(500, slip=0.98) # walk forward inside a web for 500t with a slip of 0.98 (ice) (please never build this jump)#")
        self.insert_text("\n")

        self.heading2("Web45")
        self.show_function_signature("web45")
        self.insert_text("\nWalk inside a web and on the ground while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("web45(1) = web.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("web45(5) # 45 strafe and walk forward inside a web for 5t #\nweb45.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintweb")
        self.show_function_signature("sweb")
        self.insert_text("\nSprint inside a web and on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sweb(5) # sprint forward inside a web for 5t #\nsweb.wd(3, 10) # sprint inside a web with w+d for 3t while facing at 10 degrees #\nsweb(500, slip=0.98) # sprint forward inside a web for 500t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sprintweb45")
        self.show_function_signature("sweb45")
        self.insert_text("\nSprint inside a web and on the ground while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("sweb45(1) = sweb.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("sweb45(5) # 45 strafe and sprint forward inside a web for 5t #\nsweb45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneakweb")
        self.show_function_signature("snweb")
        self.insert_text("\nSneak inside a web and on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snweb(5) # sneak forward inside a web for 5t #\nsnweb.wd(3, 10) # sneak inside a web with w+d for 3t while facing at 10 degrees #\nsnweb(20, slip=0.98) # sneak forward inside a web for 20t with a slip of 0.98 (ice) (please never build this jump)#")
        self.insert_text("\n")

        self.heading2("Sneakweb45")
        self.show_function_signature("snweb45")
        self.insert_text("\nSneak inside a web and on the ground while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("snweb45(1) = snweb.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snweb45(5) # 45 strafe and sneak forward inside a web for 5t #\nsnweb45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneaksprintweb (Versions 1.14+ only)")
        self.show_function_signature("snsweb")
        self.insert_text("\nSneak and sprint inside a web and on the ground for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snsweb(5) # sneak sprint forward inside a web for 5t #\nsnsweb.wd(3, 10) # sneak sprint inside a web with w+d for 3t while facing at 10 degrees #\nsnsweb(20, slip=0.98) # sneak forward inside a web for 20t with a slip of 0.98 (ice) #")
        self.insert_text("\n")

        self.heading2("Sneaksprintweb45 (Versions 1.14+ only)")
        self.show_function_signature("snsweb45")
        self.insert_text("\nSneak and sprint inside a web and on the ground while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("snsweb45(1) = snsweb.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snsweb45(5) # 45 strafe and sneak forward inside a web for 5t #\nsnsweb45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")
        
        self.heading2("Webair")
        self.show_function_signature("weba")
        self.insert_text("\nMove inside a web while also airborn for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("weba(5) # move forward inside a web while midair for 5t #\nweba.wd(3, 10) # move inside a web while midair with w+d for 3t while facing at 10 degrees")
        self.insert_text("\n")

        self.heading2("Webair45")
        self.show_function_signature("weba45")
        self.insert_text("\nWalk inside a web and on the ground while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("weba45(1) = weba.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("weba45(5) # 45 strafe and move forward while midair and inside a web for 5t #\nweb45a.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintwebair")
        self.show_function_signature("sweba")
        self.insert_text("\nSprint inside a web while midair ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("sweba(5) # sprint in air and inside a web for 5t #\nsweba.wd(3, 10) # sprint  in air and inside a web with w+d for 3t while facing at 10 degrees #")
        self.insert_text("\n")

        self.heading2("Sprintwebair45")
        self.show_function_signature("sweba45")
        self.insert_text("\nSprint inside a web while midair and 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("sweba45(1) = sweba.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("sweba45(5) # 45 strafe and sprint forward midair and inside a web for 5t #\nsweba45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneakwebair")
        self.show_function_signature("snweba")
        self.insert_text("\nSneak while midair and inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snweba(5) # sneak while midair inside a web for 5t #\nsnweba.wd(3, 10) # sneak while midair inside a web with w+d for 3t while facing at 10 degrees #")
        self.insert_text("\n")

        self.heading2("Sneakwebair45")
        self.show_function_signature("snweba45")
        self.insert_text("\nSneak while midair and inside a web and while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("snweba45(1) = snweba.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snweba45(5) # 45 strafe midair and sneak forward inside a web for 5t #\nsnweba45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneaksprintwebair (Versions 1.14+ only)")
        self.show_function_signature("snsweba")
        self.insert_text("\nSneak and sprint while midair and inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snsweba(5) # sneak sprint forward inside a web for 5t #\nsnsweba.wd(3, 10) # sneak sprint inside a web with w+d for 3t while facing at 10 degrees #")
        self.insert_text("\n")

        self.heading2("Sneaksprintwebair45 (Versions 1.14+ only)")
        self.show_function_signature("snsweba45")
        self.insert_text("\nSneak and sprint while midair and inside a web while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees. Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("snsweb45(1) = snsweb.wa(1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snsweba45(5) # 45 strafe midair and sprint sneak inside a web for 5t #\nsnsweba45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

#######################

        self.heading2("Webjump")
        self.show_function_signature("webj")
        self.insert_text("\nJump inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nAdditionally, ")
        self.inline_code("webj(t) = webj(1) weba(t-1)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("webj(5) # jump forward inside a web for 5t #\nwebj.wd(3, 10) # jump inside a web with w+d for 3t while facing at 10 degrees #\nweb(500, slip=0.98) # walk forward inside a web for 500t with a slip of 0.98 (ice) (please never build this jump)#")
        self.insert_text("\n")

        self.heading2("Webjump45")
        self.show_function_signature("webj45")
        self.insert_text("\nJump inside a web while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("webj45(t) = webj.wa(1,45) webj.wa(t-1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("webj45(5) # jump and 45 strafe inside a web for 5t #\nwebj45.sa # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sprintwebjump")
        self.show_function_signature("swebj")
        self.insert_text("\nSprint jump inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("swebj(5) # sprint jump inside a web for 5t #\nswebj.wd(3, 10) # sprint jump inside a web with w+d for 3t while facing at 10 degrees #")
        self.insert_text("\n")

        self.heading2("Sprintwebjump45")
        self.show_function_signature("swebj45")
        self.insert_text("\nSprint jump, the 45 strafe, all while inside a web for a total of ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("swebj45(t) = swebj(1) sweba.wa(t-1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("swebj45(5) # sprint jump, then 45 strafe inside a web for 5t #\nswebj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneakwebjump")
        self.show_function_signature("snwebj")
        self.insert_text("\nSneak jump inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snwebj(5) # sneak jump forward inside a web for 5t #\nsnwebj.wd(3, 10) # sneak jump inside a web with w+d for 3t while facing at 10 degrees #\nsnwebj(20, speed=3) # sneak jump inside a web for 20t with speed 3 #")
        self.insert_text("\n")

        self.heading2("Sneakwebjump45")
        self.show_function_signature("snwebj45")
        self.insert_text("\nSneak jump and 45 strafe inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\nAdditionally, ")
        self.inline_code("snwebj45(t) = snwebj.wa(1,45) snweb.wa(t-1,45)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snwebj45(5) # sneak jump and 45 strafe inside a web for 5t #\nsnwebj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

        self.heading2("Sneaksprintwebjump (Versions 1.14+ only)")
        self.show_function_signature("snswebj")
        self.insert_text("\nSneak sprint jump inside a web for ")
        self.inline_code("duration")
        self.insert_text(" ticks while facing ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Can be modified by an input.\nExamples:\n\n")
        self.code_snippet("snswebj(5) # sneak sprint jump forward inside a web for 5t #\nsnswebj.wd(3, 10) # sneak sprint jump inside a web with w+d for 3t while facing at 10 degrees #\nsnswebj(7, speed=2, slow=1) # sneak sprint jump inside a web for 20t with a speed 2 and slow 1 #")
        self.insert_text("\n")

        self.heading2("Sneaksprintwebjump45 (Versions 1.14+ only)")
        self.show_function_signature("snswebj45")
        self.insert_text("\nSneak sprint jump inside a web while 45 strafing for ")
        self.inline_code("duration")
        self.insert_text(" ticks going towards the direction of ")
        self.inline_code("rotation")
        self.insert_text(" degrees, with a ground slipperiness of ")
        self.inline_code("slip")
        self.insert_text(" and with potion effects ")
        self.inline_code("speed")
        self.insert_text(" and ")
        self.inline_code("slow")
        self.insert_text(". Cannot be modified by an input.\n")
        self.insert_text("Jumping with strafe in this scenario is faster than without. Therefore, this function automatically optimizes by adjusting the jump angle to maximize distance. This angle differs depending on the circumstance, such as potion effects and how slippery the ground is. Under normal circumstances (no potion effects and a ground slip of 0.6), ")
        self.inline_code("snswebj45 = snswebj.wa(1, 9.115)")
        self.insert_text(", but if the player has slowness 1 and the ground has a slip of 0.98 (ice), then ")
        self.inline_code("snswebj45 = snswebj.wa(1, 2.058)")
        self.insert_text(".\nExamples:\n\n")
        self.code_snippet("snswebj45(5) # sprint sneak jump and 45 strafe inside a web for 5t #\nsnswebj45.wd # raises an error: cannot be modified by an input #")
        self.insert_text("\n")

###########################

# TODO: Add sword related functions

        self.finalize()
        
if __name__ == "__main__":
    import tkinter as tk
    r = tk.Tk()
    a = MovementDocumentation(r)
    r.mainloop()